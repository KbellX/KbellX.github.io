<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KBellX</title>
  
  <subtitle>编织者编织着</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-28T07:57:22.539Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>KBellX</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git理解</title>
    <link href="http://yoursite.com/2017/07/06/git%E7%90%86%E8%A7%A3/"/>
    <id>http://yoursite.com/2017/07/06/git理解/</id>
    <published>2017-07-06T03:19:04.000Z</published>
    <updated>2017-11-28T07:57:22.539Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本人对git的理解，若有不当，欢迎指出</p><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><p>tags，branch都是指向提交commit的</p><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><p>标签 实质 是 ./refs/tags/ 下的一个文件，其内容 是一个提交的 SHA值。<br>即 2个值 确定一个标签：标签名 和提交SHA值<br>推送远程标签格式<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push origin refs/tags/v1:refs/tags/v3</div></pre></td></tr></table></figure></p><p>v3 即为远程标签名，SHA值为 本地v1 标签对应的SHA值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push origin v1</div></pre></td></tr></table></figure></p><p>v1为远程标签名，SHA值为本地v1标签对应的SHA值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push origin :refs/tags/v1</div></pre></td></tr></table></figure></p><p>远程标签名为v1，SHA值为空，无意义，便删除</p><h3 id="远程（push-amp-pull）"><a href="#远程（push-amp-pull）" class="headerlink" title="远程（push&amp;pull）"></a>远程（push&amp;pull）</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本人对git的理解，若有不当，欢迎指出&lt;/p&gt;
&lt;h3 id=&quot;文件&quot;&gt;&lt;a href=&quot;#文件&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git常用命令</title>
    <link href="http://yoursite.com/2017/07/05/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/07/05/git常用命令/</id>
    <published>2017-07-05T12:30:49.000Z</published>
    <updated>2017-11-28T07:58:41.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>总结git常用命令，持续更新<br><a id="more"></a></p><h2 id="必要说明"><a href="#必要说明" class="headerlink" title="必要说明"></a>必要说明</h2><ul><li>远程主机名默认为 origin</li><li>绝大部分命令在项目目录下执行</li></ul><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name <span class="string">"xxx"</span><span class="comment">## 配置用户名</span></div><div class="line">$ git config --global user.email <span class="string">"xxx@xxx.com"</span><span class="comment">## 配置邮件</span></div><div class="line">$ git config --global push.default matching<span class="comment">## 设置成matching模式：不带任何参数的git push 推送 对应远程分支 </span></div><div class="line">$ git config --global push.default simple<span class="comment">## 设置成simple模式：不带任何参数的git push 仅推送 当前分支</span></div></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git init<span class="comment">## 新建本地仓库</span></div></pre></td></tr></table></figure><h3 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git add &lt;file&gt;<span class="comment">## 提交到stage</span></div><div class="line">$ git commit -m <span class="string">"说明"</span><span class="comment">## 提交到本地仓库</span></div><div class="line">$ git commit -am <span class="string">'说明'</span><span class="comment">## add并commit</span></div></pre></td></tr></table></figure><h3 id="撤销修改"><a href="#撤销修改" class="headerlink" title="撤销修改"></a>撤销修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git clean -f<span class="comment">## 删除untracked files</span></div><div class="line">$ git checkout -- &lt;file&gt;<span class="comment">## 根据 stage 撤销 工作区 修改</span></div><div class="line">$ git reset HEAD &lt;file&gt;<span class="comment">## 根据 本地仓库 回退 stage 修改</span></div></pre></td></tr></table></figure><h3 id="回退"><a href="#回退" class="headerlink" title="回退"></a>回退</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git reset HEAD^<span class="comment">## 退回上一个版本</span></div><div class="line">$ git reset HEAD~2<span class="comment">## 退回到前2个版本，依次类推</span></div><div class="line">$ git reset fc7098<span class="comment">## 退回到版本号 fc7098 版本</span></div><div class="line">$ git reset fc7098 --soft<span class="comment">## 版本库退回指定版本，stage与工作区不退</span></div><div class="line">$ git reset fc7098 <span class="comment">## 默认参数为 mixed，版本库与stage退回，工作区不退</span></div><div class="line">$ git reset fc7098 --hard <span class="comment">## 三区都退回指定版本</span></div></pre></td></tr></table></figure><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ git branch<span class="comment">## 查看分支</span></div><div class="line">$ git branch -r<span class="comment">## 查看远程分支</span></div><div class="line">$ git branch -a <span class="comment">## 查看所有分支</span></div><div class="line">$ git branch &lt;name&gt;<span class="comment">## 创建分支不切换</span></div><div class="line">$ git branch -d &lt;name&gt;<span class="comment">## 删除分支</span></div><div class="line">$ git checkout &lt;name&gt;<span class="comment">## 切换分支</span></div><div class="line">$ git checkout -b &lt;name&gt;<span class="comment">## 创建并切换分支</span></div></pre></td></tr></table></figure><h3 id="远程"><a href="#远程" class="headerlink" title="远程"></a>远程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ git remote add origin git@github.com:username/repositories.git<span class="comment">## 关联已存在远程仓库</span></div><div class="line">$ git branch --<span class="built_in">set</span>-upstream master origin/next<span class="comment">## 当前master分支与远程主机origin的next建立追踪关系</span></div><div class="line"><span class="comment">### push ###</span></div><div class="line">$ git push origin master:master <span class="comment">## 将本地master分支(冒号前)推送到远程主机origin的master分支(冒号后)</span></div><div class="line">$ git push origin master<span class="comment">## 将本地master分支推送到远程主机origin中与之有“追踪关系”的分支，不存在则新建</span></div><div class="line">$ git push origin :master<span class="comment">## 推送空分支到远程master分支，即删除远程master分支</span></div><div class="line">$ git push origin --delete master<span class="comment">## 删除远程master分支</span></div><div class="line">$ git push -u origin &lt;name&gt;<span class="comment">## 将分支发布到远程主机origin，-u表示指定该主机为默认主机，给两分支"追踪关系"</span></div><div class="line">$ git push origin <span class="comment">## 推送当前分支到远程主机origin与之有“追踪关系”的分支</span></div><div class="line">$ git push<span class="comment">## 推送当前分支到（只存在一个或默认主机）的与之有"追踪关系"的分支</span></div><div class="line"><span class="comment">### fetch ###</span></div><div class="line">$ git fetch origin master<span class="comment">## 取回不合并</span></div><div class="line"><span class="comment">### pull ###</span></div><div class="line">$ git pull origin dev:master<span class="comment">## 取回远程主机origin的dev分支，与本地master分支合并</span></div><div class="line">$ git pull origin dev<span class="comment">## 取回远程主机origin的dev分支，并与当前分支合并</span></div><div class="line">$ git pull origin<span class="comment">## 取回与当前分支有追踪关系的远程分支并合并</span></div><div class="line"><span class="comment">### clone ###</span></div><div class="line">$ git <span class="built_in">clone</span> git@github.com:username/repositories.git <span class="comment">## 克隆远程仓库</span></div><div class="line">$ git <span class="built_in">clone</span> git@github.com:username/repositories.git dir <span class="comment">## 克隆远程仓库到dir文件夹</span></div></pre></td></tr></table></figure><h3 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git merge origin/master <span class="comment">## 合并远程分支master到当前分支</span></div><div class="line">$ git merge dev<span class="comment">## 合并本地dev分支到本地当前分支</span></div></pre></td></tr></table></figure><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ git tag <span class="comment">## 列出当前所有标签</span></div><div class="line">$ git tag v1<span class="comment">## 给当前commit新建v1标签</span></div><div class="line">$ git tag v1 16df112<span class="comment">## 给版本号16df112的commit v1标签</span></div><div class="line">$ git tag -d v1 <span class="comment">## 删除本地v1标签</span></div><div class="line">$ git push origin refs/tags/v1:refs/tags/v1 <span class="comment">## 推送远程标签格式</span></div><div class="line">$ git push origin refs/tags/v1:refs/tags/v2 <span class="comment">## 新建远程标签v2，对应提交为本地v1标签对应的提交</span></div><div class="line">$ git push origin v1 <span class="comment">## 新建远程标签v1，对应提交为本地v1标签对应的提交</span></div><div class="line">$ git push origin :refs/tags/v1 <span class="comment">## 删除远程v1标签</span></div><div class="line">$ git push --tags<span class="comment">## 推送所有标签</span></div></pre></td></tr></table></figure><h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ git config user.name      <span class="comment">## 查看当前用户名</span></div><div class="line">$ git config user.email     <span class="comment">## 查看当前用户邮箱</span></div><div class="line">$ git status <span class="comment">## 查看修改</span></div><div class="line">$ git branch<span class="comment">## 查看分支</span></div><div class="line">$ git <span class="built_in">log</span> <span class="comment">## 查看版本历史</span></div><div class="line">$ git diff<span class="comment">## 查看工作区与stage区别</span></div><div class="line">$ git diff &lt;file&gt;<span class="comment">## 查看某文件在工作区与stage区别</span></div><div class="line">$ git diff --cached<span class="comment">## 查看stage与版本库区别</span></div><div class="line">$ git diff da4687:&lt;file&gt; ad8753:&lt;file&gt; <span class="comment">## 查看两版本该文件区别</span></div><div class="line">$ git show 16df112<span class="comment">## 查看版本号16df112的信息</span></div><div class="line">$ git tag <span class="comment">## 列出当前所有标签</span></div></pre></td></tr></table></figure><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ul><li><a href="https://gist.github.com/guweigang/9848271#file-git_toturial-L9" target="_blank" rel="noopener">git命令大全</a></li><li><a href="http://www.ruanyifeng.com/blog/2014/06/git_remote.html" target="_blank" rel="noopener">Git远程操作详解-阮一峰</a></li><li><a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener">常用 Git 命令清单-阮一峰</a></li><li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">Git教程-廖雪峰</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;总结git常用命令，持续更新&lt;br&gt;
    
    </summary>
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>mrakdown常用语法</title>
    <link href="http://yoursite.com/2017/07/05/mrak%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2017/07/05/mrak常用语法/</id>
    <published>2017-07-05T02:00:42.000Z</published>
    <updated>2017-11-28T07:57:22.541Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>markdown是一种轻量级标记语言，其语法简单，写好即排版。</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">## 标题2</div><div class="line">### 标题3</div><div class="line">#### 标题4</div><div class="line">##### 标题5</div><div class="line">###### 标题6；#后要空一格</div></pre></td></tr></table></figure><h2 id="标题2"><a href="#标题2" class="headerlink" title="标题2"></a>标题2</h2><h3 id="标题3"><a href="#标题3" class="headerlink" title="标题3"></a>标题3</h3><h4 id="标题4"><a href="#标题4" class="headerlink" title="标题4"></a>标题4</h4><h5 id="标题5"><a href="#标题5" class="headerlink" title="标题5"></a>标题5</h5><h6 id="标题6；-后要空一格"><a href="#标题6；-后要空一格" class="headerlink" title="标题6；#后要空一格"></a>标题6；#后要空一格</h6><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; 这是一个引用</div><div class="line">&gt; </div><div class="line">&gt; 引用</div></pre></td></tr></table></figure><blockquote><p>这是一个引用</p><p>引用</p></blockquote><h2 id="修饰"><a href="#修饰" class="headerlink" title="修饰"></a>修饰</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">*斜体*</div><div class="line">**加粗**</div></pre></td></tr></table></figure><p><em>斜体</em><br><strong>加粗</strong></p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[这是一个链接:我的博客](https://kbellx.github.io/)</div></pre></td></tr></table></figure><p><a href="https://kbellx.github.io/" target="_blank" rel="noopener">这是一个链接:我的博客</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">I strongly recommend against using any `&lt;blink&gt;` tags.</div><div class="line">I wish SmartyPants used named entities like `&amp;mdash;`</div><div class="line">instead of decimal-encoded entites like `&amp;#8212;`.</div></pre></td></tr></table></figure><p>I strongly recommend against using any <code>&lt;blink&gt;</code> tags.<br>I wish SmartyPants used named entities like <code>&amp;mdash;</code><br>instead of decimal-encoded entites like <code>&amp;#8212;</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">一个tab键或4个空格键表示该行为代码</div><div class="line">第二行起要2个tab才能与第一行列对齐</div><div class="line">没有tab的行就不是代码</div></pre></td></tr></table></figure><pre><code>一个tab键或4个空格键表示该行为代码        第二行起要2个tab才能与第一行列对齐</code></pre><p>没有tab的行就不是代码</p><pre><code>被上下包围的是一段代码    同样，第二行起要1个tab键才能对齐这行没tab，没对齐</code></pre><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>第一行<br>在第一行后敲回车 对应html为 <code>&lt;br &gt;</code><br>一个空行 则上下分成2个<code>&lt;p&gt;</code></p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>三个以上的<code>*</code>或<code>-</code>或<code>_</code>,该行不能有任何其它东西<br><code>*******************</code></p><hr><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul><li><code>+</code>,<code>-</code>,<code>*</code> 都可以表示列表 </li><li>一级</li><li>一级<ul><li><code>tab</code>再 <code>+</code> 就表示二级（下一级）</li></ul></li></ul><ul><li>若不同，前<code>+</code>后<code>-</code>就是2个同级ul</li></ul><ol><li>一</li><li>二</li><li>三</li></ol><h2 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠"></a>反斜杠</h2><p>*被<code>*</code>包围的不再是斜体了*</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;markdown是一种轻量级标记语言，其语法简单，写好即排版。&lt;/p&gt;
&lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;h
      
    
    </summary>
    
      <category term="杂" scheme="http://yoursite.com/categories/%E6%9D%82/"/>
    
    
      <category term="杂" scheme="http://yoursite.com/tags/%E6%9D%82/"/>
    
  </entry>
  
  <entry>
    <title>我的博文规范</title>
    <link href="http://yoursite.com/2017/07/04/%E6%88%91%E7%9A%84%E5%8D%9A%E6%96%87%E8%A7%84%E8%8C%83/"/>
    <id>http://yoursite.com/2017/07/04/我的博文规范/</id>
    <published>2017-07-04T10:02:19.000Z</published>
    <updated>2017-11-28T07:57:22.542Z</updated>
    
    <content type="html"><![CDATA[<h2 id="板块"><a href="#板块" class="headerlink" title="板块"></a>板块</h2><ul><li><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3></li><li><h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3>  实质性的内容，步骤，尽量不参杂说明</li><li><h3 id="我的理解"><a href="#我的理解" class="headerlink" title="我的理解"></a>我的理解</h3>  个人见解，仅供参考，主观</li><li><h3 id="Notices"><a href="#Notices" class="headerlink" title="Notices"></a>Notices</h3>  注意事项，说明，坑，尽量客观</li><li><h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h3></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;板块&quot;&gt;&lt;a href=&quot;#板块&quot; class=&quot;headerlink&quot; title=&quot;板块&quot;&gt;&lt;/a&gt;板块&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/
      
    
    </summary>
    
      <category term="杂" scheme="http://yoursite.com/categories/%E6%9D%82/"/>
    
    
      <category term="杂" scheme="http://yoursite.com/tags/%E6%9D%82/"/>
    
  </entry>
  
  <entry>
    <title>hexo 搭建博客</title>
    <link href="http://yoursite.com/2017/07/04/hexo%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/07/04/hexo 搭建博客/</id>
    <published>2017-07-04T01:43:26.000Z</published>
    <updated>2017-11-28T07:57:22.540Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文介绍 hexo 搭建个人博客，涉及node.js, Github.pages, next, markdown。<br><a id="more"></a></p><h2 id="教程-："><a href="#教程-：" class="headerlink" title="教程 ："></a>教程 ：</h2><ol><li><h3 id="安装-node，github，并完成相关配置（略）"><a href="#安装-node，github，并完成相关配置（略）" class="headerlink" title="安装 node，github，并完成相关配置（略）"></a>安装 node，github，并完成相关配置（略）</h3></li><li><h3 id="本地操作-hexo"><a href="#本地操作-hexo" class="headerlink" title="本地操作 hexo"></a>本地操作 hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#安装 Hexo</span></div><div class="line">$ npm install -g hexo-cli</div><div class="line"></div><div class="line"><span class="comment">#hexo安装文件</span></div><div class="line"><span class="comment">#在项目目录下</span></div><div class="line">$ hexo init</div><div class="line">$ npm install</div><div class="line"></div><div class="line"><span class="comment">#本地访问</span></div><div class="line">$ hexo server</div><div class="line"><span class="comment">#浏览器输入 http://localhost:4000/，不报错则成功</span></div></pre></td></tr></table></figure></li><li><h3 id="下载并配置-next-主题"><a href="#下载并配置-next-主题" class="headerlink" title="下载并配置 next 主题"></a>下载并配置 next 主题</h3><ul><li><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</div><div class="line"><span class="comment">#该主题需安装另外2个modules</span></div><div class="line">$ npm install hexo-renderer-jade@0.3.0 --save </div><div class="line">$ npm install hexo-renderer-sass --save</div></pre></td></tr></table></figure></li><li><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>把项目目录下 <em>_config.yml</em> 文件 改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme：maupassant</div></pre></td></tr></table></figure></li></ul></li><li><h3 id="部署到-Github-page"><a href="#部署到-Github-page" class="headerlink" title="部署到 Github.page"></a>部署到 Github.page</h3><ul><li><h4 id="github上新建username-github-io仓库，如KbellX-github-io"><a href="#github上新建username-github-io仓库，如KbellX-github-io" class="headerlink" title="github上新建username.github.io仓库，如KbellX.github.io"></a>github上新建username.github.io仓库，如KbellX.github.io</h4></li><li><h4 id="下载-hexo-deployer-git"><a href="#下载-hexo-deployer-git" class="headerlink" title="下载 hexo-deployer-git"></a>下载 hexo-deployer-git</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></li><li><h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p>在./config.yml 配置<br><strong>注意冒号后要空格！</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line"> <span class="built_in">type</span>: git</div><div class="line"> repo: 仓库地址</div><div class="line"> branch: master</div></pre></td></tr></table></figure></li><li><h4 id="正式部署"><a href="#正式部署" class="headerlink" title="正式部署"></a>正式部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></li><li><h4 id="通过-http-username-github-io-访问"><a href="#通过-http-username-github-io-访问" class="headerlink" title="通过 http://username.github.io 访问"></a>通过 <a href="http://username.github.io" target="_blank" rel="noopener">http://username.github.io</a> 访问</h4></li></ul></li><li><h3 id="发博文"><a href="#发博文" class="headerlink" title="发博文"></a>发博文</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#./source/_posts/下生成my-first-article.md</span></div><div class="line">$ hexo new my-first-article</div><div class="line"></div><div class="line"><span class="comment">#用 markdown 语法写博文</span></div><div class="line"><span class="comment"># 将 my-first-article.md 生成 ./public/多个my-first-article/index.html</span></div><div class="line">$ hexo generate </div><div class="line"></div><div class="line"><span class="comment">#看一看</span></div><div class="line">$ hexo server</div><div class="line"></div><div class="line"><span class="comment">#发布到远程</span></div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></li></ol><h2 id="我的理解"><a href="#我的理解" class="headerlink" title="我的理解"></a>我的理解</h2><ul><li>hexo ：node.js的一个module</li><li>next ：主题，通过 git clone 下载，再配置即可用；切换方便，对 主题 外文件改动小（未实践）</li><li>Github.pages ：是代表 <strong>当前用户</strong> 的仓库（网站），部署后可通过 <a href="http://username.github.io" target="_blank" rel="noopener">http://username.github.io</a> 访问</li><li>markdown ：一种轻量级标记语言，易读易写，写好即排版</li><li>hexo搭建过程简单，重点在习惯markdown语法写博文</li><li>hexo方式搭博客最终生成的是静态网页，一篇博文是一个纯html文件，因此速度极快</li><li>牺牲空间，如一篇博文的html在archives，categories，tags等目录下都有储存</li><li>对于个人博客（面向一个对象存储数据）来说，十分适用</li></ul><h2 id="Notice"><a href="#Notice" class="headerlink" title="Notice"></a>Notice</h2><ol><li><p>目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── _config.yml  //hexo的配置文件</div><div class="line">├── package.json</div><div class="line">├── node_modules</div><div class="line">├── public//github仓库会显示的文件，即网页上能访问的部分</div><div class="line">├── scaffolds//生成 md文件 页面的模板</div><div class="line">├── source //md文件，页面（如博文，about）的源文件</div><div class="line">|   ├── _drafts</div><div class="line">|   └── _posts</div><div class="line">└── theme： //主题</div></pre></td></tr></table></figure><p> theme里也有<em>_config.yml</em>文件，注意区分；<br> 配置文件格式要注意，如冒号后空格；</p></li><li><p>hexo命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo generate ~ hexo g </div><div class="line">hexo server ~ hexo s </div><div class="line">hexo deploy ~ hexo d</div></pre></td></tr></table></figure><p> hexo server 输入后只要不退出或关闭bash，node处于监听状态，类似打包工具webpack -w（即修改博文后刷新页面即能看到修改，不用再次输hexo server)</p></li><li>但hexo d前 最好先 hexo g 一下，因为 监听 状态下 刷新页面 看到的修改是临时的。</li><li>尽量通过 hexo new 生成md文件（直接新建md，有些地方好像没有关联）</li><li>分类categories 与 标签tags 区别：标签都是同级的，分类有从属关系，前父后子    </li></ol><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p>重点：</p><ul><li><a href="https://pages.github.com/" target="_blank" rel="noopener">Github.pages 官网</a></li><li><a href="https://hexo.io/zh-cn/docs/setup.html" target="_blank" rel="noopener">hexo 官方教程</a></li><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">next 使用手册</a></li><li><a href="http://wowubuntu.com/markdown/basic.html" target="_blank" rel="noopener">markdown 手册</a></li><li><a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="noopener">本博客主题</a></li></ul><p>可选：</p><ul><li>小图标 : <a href="http://fontawesome.io/3.2.1/icons/" target="_blank" rel="noopener">Font Awesome icons</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文介绍 hexo 搭建个人博客，涉及node.js, Github.pages, next, markdown。&lt;br&gt;
    
    </summary>
    
      <category term="node.js" scheme="http://yoursite.com/categories/node-js/"/>
    
      <category term="hexo" scheme="http://yoursite.com/categories/node-js/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
  </entry>
  
</feed>
